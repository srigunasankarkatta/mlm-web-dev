@use "../../styles/color-palette" as *;

.mlmTreeContainer {
  background: transparent;
  padding: 0;
  margin: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;

  .treeWrapper {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: auto;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;

    // Tree link styles - minimalist approach
    :global(.rd3t-link) {
      stroke: #6b7280;
      stroke-width: 2;
      fill: none;
      transition: all 0.3s ease;
    }

    // Ensure SVG is properly positioned for horizontal layout
    :global(.rd3t-svg) {
      width: 100%;
      height: 100%;
      overflow: visible;
    }

    // Tree container positioning
    :global(.rd3t-tree-container) {
      width: 100%;
      height: 100%;
      overflow: visible;
    }

    // Force horizontal orientation
    :global(.rd3t-tree-container svg) {
      width: 100%;
      height: 100%;
    }

    // Ensure proper horizontal flow
    :global(.rd3t-node) {
      transform-origin: center;
    }

    // Disable zoom and pan interactions
    :global(.rd3t-svg) {
      pointer-events: none;
    }

    :global(.rd3t-tree-container) {
      pointer-events: none;
    }

    // Re-enable pointer events for nodes only
    :global(.rd3t-node) {
      pointer-events: auto;
    }

    // Node styles
    :global(.rd3t-node) {
      cursor: pointer;
      transition: all 0.3s ease;

      &:hover {
        transform: scale(1.05);
      }
    }
  }
}

// Minimalist node styles
.nodeCircle {
  transition: all 0.2s ease;

  &:hover {
    fill: #374151;
    transform: scale(1.05);
  }
}

.nodeText {
  user-select: none;
  pointer-events: none;
  font-family: system-ui, -apple-system, sans-serif;
}

.detailText {
  user-select: none;
  pointer-events: none;
  font-family: system-ui, -apple-system, sans-serif;
}

// Animation keyframes
@keyframes nodePop {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes linkDraw {
  0% {
    stroke-dasharray: 0, 1000;
  }
  100% {
    stroke-dasharray: 1000, 0;
  }
}

// Apply animations to new nodes
:global(.rd3t-node) {
  animation: nodePop 0.6s ease-out;
}

:global(.rd3t-link) {
  animation: linkDraw 0.8s ease-out;
}

// Global SVG text styling to ensure white color and light font weight
:global(.rd3t-node text) {
  fill: #ffffff !important;
  color: #ffffff !important;
  font-weight: 200 !important;
}

// More specific selectors for react-d3-tree
:global(.rd3t-tree-container text) {
  fill: #ffffff !important;
  color: #ffffff !important;
  font-weight: 200 !important;
}

:global(.rd3t-svg text) {
  fill: #ffffff !important;
  color: #ffffff !important;
  font-weight: 200 !important;
}

// Target all text elements within the tree container
:global(.mlmTreeContainer text) {
  fill: #ffffff !important;
  color: #ffffff !important;
  font-weight: 200 !important;
}
